@{
    ViewBag.Title = "Example 4";
}

<script type="text/javascript">

	//first define the Player type
	$exoweb({
		"types": {
			"Player": {
				"properties": {
					"FirstName": { "type": "String", "index": 0 },
					"LastName": { "type": "String", "index": 1 },
					"NumberOfWins": { "type": "Number", "index": 2 },
					"Gender": { "type": "String", "index": 3 },
					"HasWonAGame": { "type": "Boolean", "index": 4 }
				}
			}
		},
		model: {
			player: {
				id: "1",
				from: "Player",
				load: {
					"instances": {
						"Player": {
							"1": ["Babe", "Ruth", 1000, "Male", true]
						}
					}
				}
			}
		},
		init: function () {
			ExoWeb.UI.Template.load('@Url.Content("~/Examples/Templates")');
		},
		contextReady: function () {
			//create a rule so that first and last name are required
			$extend('Player', function (type) {
				type.meta.addProperty({
					name: 'FullName',
					type: String
				}).calculated({
					fn: function () {
						return this.get_FirstName() + " " + this.get_LastName();
					},
					basedOn: ['this.FirstName', 'this.LastName']
				});

				type.$FirstName.required();
				type.$LastName.required();
			});
		}
	});	
</script>


<!-- Add default validation display -->
<script type="text/javascript">

	function setState(el, prefix, current, all) {
		all.forEach(function (state) {
			if (current === state) {
				el.addClass(prefix + "-" + state);
				el.prev().addClass(state);
			}
			else {
				el.removeClass(prefix + "-" + state);
				el.prev().removeClass(state);
			}
		});
	}

	$("input:bound, select:bound, textarea:bound").ever(function () {
		$(this).validated(function (sender, issues) {

			var contains = document.compareDocumentPosition ? function (a, b) {
				return !!(a.compareDocumentPosition(b) & 16);
			} : function (a, b) {
				return a !== b && (a.contains ? a.contains(b) : true);
			};
			if (!contains(document.documentElement, this))
				return;

			// locate validation area
			var $area = $(this).closest(".field");
			var $validation = $area.find(".validation");

			if ($validation.size() == 0) {
				$validation = $(this).next();

				if (!$validation.is('.validation')) {
					// container not found so inject it
					$validation = $(this).after("<div class='validation'></div>").next();
				}
			}

			var states = ["alert", "none", "warning"];

			if (issues.length == 0) {
				setState($(this), "validated", "none", states);
				setState($validation, "validation", "none", states);
				setState($area, "validated", "none", states);
			} else {
				var isWarning = issues[0].get_type() instanceof ExoWeb.Model.ConditionType.Warning
				setState($(this), "validated", isWarning ? "warning" : "alert", states);
				setState($validation, "validation", isWarning ? "warning" : "alert", states);
				setState($area, "validated", isWarning ? "warning" : "alert", states);

				$validation.text(issues[0].get_message());
			}
		});
	});
	
</script>

<h2>Example 4</h2>

<h3>Using ExoWeb Templates</h3>
<div class="sys-template" sys:attach="dataview" dataview:data="{~ context.model.player }">
	<div class="readonly"><span sys:attach="content" content:data="{@@ FirstName }"></span></div>
	<div class="readonly"><span sys:attach="content" content:data="{@@ LastName }"></span></div>
	<div class="field"><span sys:attach="content" content:data="{@@ FirstName }"></span></div>
	<div class="field"><span sys:attach="content" content:data="{@@ LastName }"></span></div>
	<div class="field"><span sys:attach="content" content:data="{@@ FullName }"></span></div>
	<div class="field"><span sys:attach="content" content:data="{@@ HasWonAGame }"></span></div>
</div>