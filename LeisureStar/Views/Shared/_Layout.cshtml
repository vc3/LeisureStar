<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<title>@ViewBag.Title</title>
	<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
	<script src="@Url.Content("~/Scripts/jquery-1.5.1.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/modernizr-1.7.min.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/MicrosoftAjax.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/MicrosoftAjaxTemplates.debug.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/exoweb-msajax.js?cachehash=" + ExoWeb.CacheHash)" type="text/javascript"></script>
	<script type="text/javascript">
		$exoweb({
			contextReady: function () {
				ExoWeb.UI.Template.load('@Url.Content("~/Scripts/exoweb.templates.htm")' + "?cachehash=" + ExoWeb.cacheHash);
			}
		});
	</script>
	<script>
		$(function () {
			function createDatePicker() {
				$(this).datepicker({
					minDate: new Date('1/1/0001'),
					maxDate: new Date('12/31/9999'),
					yearRange: '-110:+50',
					duration: 0,
					dateFormat: 'm/d/yy',
					showOn: 'button',
					changeYear: true,
					changeMonth: true,
					onSelect: function (val, control) {
						// jquery trigger doesn't seem to raise the event
						// properly, so raise it here
						var el = $(this).get(0);
						if (el.fireEvent) { el.fireEvent("onchange"); }
						else if (el.dispatchEvent) {
							var evt = document.createEvent("MutationEvents");
							evt.initEvent("change", false, true);
							el.dispatchEvent(evt);
						}
					}
				});
			}

			$("input.datepicker:bound").ever(createDatePicker);
		});
	</script>
	
	<!-- Add default validation display -->
	<script type="text/javascript">

		function setState(el, prefix, current, all) {
			all.forEach(function (state) {
				if (current === state)
					el.addClass(prefix + "-" + state);
				else
					el.removeClass(prefix + "-" + state);
			});
		}

		$("input:bound, select:bound, textarea:bound").ever(function () {
			$(this).validated(function (sender, issues) {

				// locate validation area
				var $area = $(this).closest(".field");
				var $validation = $area.find(".validation");

				if ($validation.size() == 0) {
					$validation = $(this).next();

					if (!$validation.is('.validation')) {
						// container not found so inject it
						$validation = $(this).after("<div class='validation'></div>").next();
					}
				}

				var states = ["some", "none"];

				if (issues.length == 0) {
					setState($(this), "validated", "none", states);
					setState($validation, "validation", "none", states);
					setState($area, "validated", "none", states);
				} else {
					setState($(this), "validated", "some", states);
					setState($validation, "validation", "some", states);
					setState($area, "validated", "some", states);

					$validation.text(issues[0].get_message());
				}
			});
		});
	
	</script>
	@RenderSection("startupScript", required: false)
</head>
<body xmlns:sys="javascript:Sys" 
		xmlns:dataview="javascript:Sys.UI.DataView" 
		xmlns:field="javascript:ExoWeb.UI.Field" 
		xmlns:content="javascript:ExoWeb.UI.Content" 
		xmlns:template="javascript:ExoWeb.UI.Template"
		xmlns:toggle="javascript:ExoWeb.UI.Toggle"
		sys:activate="*">
	<div class="page">
		<header>
			<div id="title">
				<h1>LeisureStar</h1>
			</div>
			<div id="logindisplay">
			</div>
			<nav>
				<ul id="menu">
					<li>@Html.ActionLink("Home", "Index", "Home")</li>
					<li>@Html.ActionLink("Players", "Index", "Player")</li>
					<li>@Html.ActionLink("Teams", "Index", "Team")</li>
					<li>@Html.ActionLink("Games", "Index", "Game")</li>
					<li>@Html.ActionLink("Client Side Examples", "Index", "ClientSideExamples")</li>
				</ul>
			</nav>
		</header>
		<section id="main">
			@RenderBody()
		</section>
		<footer>
		</footer>
	</div>
</body>
</html>
